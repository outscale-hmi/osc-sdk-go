/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.6
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// DeleteMasterKeyRequest struct for DeleteMasterKeyRequest
type DeleteMasterKeyRequest struct {
	// The waiting period before deletion, in days (between `7` and `30`). By default, `30`.
	DaysUntilDeletion *int32 `json:"DaysUntilDeletion,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the master key.
	MasterKeyId string `json:"MasterKeyId"`
}

// NewDeleteMasterKeyRequest instantiates a new DeleteMasterKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteMasterKeyRequest(masterKeyId string) *DeleteMasterKeyRequest {
	this := DeleteMasterKeyRequest{}
	this.MasterKeyId = masterKeyId
	return &this
}

// NewDeleteMasterKeyRequestWithDefaults instantiates a new DeleteMasterKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteMasterKeyRequestWithDefaults() *DeleteMasterKeyRequest {
	this := DeleteMasterKeyRequest{}
	return &this
}

// GetDaysUntilDeletion returns the DaysUntilDeletion field value if set, zero value otherwise.
func (o *DeleteMasterKeyRequest) GetDaysUntilDeletion() int32 {
	if o == nil || o.DaysUntilDeletion == nil {
		var ret int32
		return ret
	}
	return *o.DaysUntilDeletion
}

// GetDaysUntilDeletionOk returns a tuple with the DaysUntilDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteMasterKeyRequest) GetDaysUntilDeletionOk() (*int32, bool) {
	if o == nil || o.DaysUntilDeletion == nil {
		return nil, false
	}
	return o.DaysUntilDeletion, true
}

// HasDaysUntilDeletion returns a boolean if a field has been set.
func (o *DeleteMasterKeyRequest) HasDaysUntilDeletion() bool {
	if o != nil && o.DaysUntilDeletion != nil {
		return true
	}

	return false
}

// SetDaysUntilDeletion gets a reference to the given int32 and assigns it to the DaysUntilDeletion field.
func (o *DeleteMasterKeyRequest) SetDaysUntilDeletion(v int32) {
	o.DaysUntilDeletion = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *DeleteMasterKeyRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteMasterKeyRequest) GetDryRunOk() (*bool, bool) {
	if o == nil || o.DryRun == nil {
		return nil, false
	}
	return o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *DeleteMasterKeyRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *DeleteMasterKeyRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetMasterKeyId returns the MasterKeyId field value
func (o *DeleteMasterKeyRequest) GetMasterKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MasterKeyId
}

// GetMasterKeyIdOk returns a tuple with the MasterKeyId field value
// and a boolean to check if the value has been set.
func (o *DeleteMasterKeyRequest) GetMasterKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterKeyId, true
}

// SetMasterKeyId sets field value
func (o *DeleteMasterKeyRequest) SetMasterKeyId(v string) {
	o.MasterKeyId = v
}

func (o DeleteMasterKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DaysUntilDeletion != nil {
		toSerialize["DaysUntilDeletion"] = o.DaysUntilDeletion
	}
	if o.DryRun != nil {
		toSerialize["DryRun"] = o.DryRun
	}
	if true {
		toSerialize["MasterKeyId"] = o.MasterKeyId
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteMasterKeyRequest struct {
	value *DeleteMasterKeyRequest
	isSet bool
}

func (v NullableDeleteMasterKeyRequest) Get() *DeleteMasterKeyRequest {
	return v.value
}

func (v *NullableDeleteMasterKeyRequest) Set(val *DeleteMasterKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteMasterKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteMasterKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteMasterKeyRequest(val *DeleteMasterKeyRequest) *NullableDeleteMasterKeyRequest {
	return &NullableDeleteMasterKeyRequest{value: val, isSet: true}
}

func (v NullableDeleteMasterKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteMasterKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
