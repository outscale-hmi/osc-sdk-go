/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.6
 * Contact: support@outscale.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package osc

import (
	"encoding/json"
)

// CreateMasterKeyResponse struct for CreateMasterKeyResponse
type CreateMasterKeyResponse struct {
	MasterKey *MasterKey `json:"MasterKey,omitempty"`
	ResponseContext *ResponseContext `json:"ResponseContext,omitempty"`
}

// NewCreateMasterKeyResponse instantiates a new CreateMasterKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMasterKeyResponse() *CreateMasterKeyResponse {
	this := CreateMasterKeyResponse{}
	return &this
}

// NewCreateMasterKeyResponseWithDefaults instantiates a new CreateMasterKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMasterKeyResponseWithDefaults() *CreateMasterKeyResponse {
	this := CreateMasterKeyResponse{}
	return &this
}

// GetMasterKey returns the MasterKey field value if set, zero value otherwise.
func (o *CreateMasterKeyResponse) GetMasterKey() MasterKey {
	if o == nil || o.MasterKey == nil {
		var ret MasterKey
		return ret
	}
	return *o.MasterKey
}

// GetMasterKeyOk returns a tuple with the MasterKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMasterKeyResponse) GetMasterKeyOk() (*MasterKey, bool) {
	if o == nil || o.MasterKey == nil {
		return nil, false
	}
	return o.MasterKey, true
}

// HasMasterKey returns a boolean if a field has been set.
func (o *CreateMasterKeyResponse) HasMasterKey() bool {
	if o != nil && o.MasterKey != nil {
		return true
	}

	return false
}

// SetMasterKey gets a reference to the given MasterKey and assigns it to the MasterKey field.
func (o *CreateMasterKeyResponse) SetMasterKey(v MasterKey) {
	o.MasterKey = &v
}

// GetResponseContext returns the ResponseContext field value if set, zero value otherwise.
func (o *CreateMasterKeyResponse) GetResponseContext() ResponseContext {
	if o == nil || o.ResponseContext == nil {
		var ret ResponseContext
		return ret
	}
	return *o.ResponseContext
}

// GetResponseContextOk returns a tuple with the ResponseContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMasterKeyResponse) GetResponseContextOk() (*ResponseContext, bool) {
	if o == nil || o.ResponseContext == nil {
		return nil, false
	}
	return o.ResponseContext, true
}

// HasResponseContext returns a boolean if a field has been set.
func (o *CreateMasterKeyResponse) HasResponseContext() bool {
	if o != nil && o.ResponseContext != nil {
		return true
	}

	return false
}

// SetResponseContext gets a reference to the given ResponseContext and assigns it to the ResponseContext field.
func (o *CreateMasterKeyResponse) SetResponseContext(v ResponseContext) {
	o.ResponseContext = &v
}

func (o CreateMasterKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MasterKey != nil {
		toSerialize["MasterKey"] = o.MasterKey
	}
	if o.ResponseContext != nil {
		toSerialize["ResponseContext"] = o.ResponseContext
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMasterKeyResponse struct {
	value *CreateMasterKeyResponse
	isSet bool
}

func (v NullableCreateMasterKeyResponse) Get() *CreateMasterKeyResponse {
	return v.value
}

func (v *NullableCreateMasterKeyResponse) Set(val *CreateMasterKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMasterKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMasterKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMasterKeyResponse(val *CreateMasterKeyResponse) *NullableCreateMasterKeyResponse {
	return &NullableCreateMasterKeyResponse{value: val, isSet: true}
}

func (v NullableCreateMasterKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMasterKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


